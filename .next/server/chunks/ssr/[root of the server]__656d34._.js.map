{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/parakhchoudhary/Desktop/parakh-portfolio/app/components/NavItem.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport cn from \"classnames\";\n\ninterface NavItemProps {\n    sectionId: string;\n    label: string;\n    activeSection: string;\n    setActiveSection: (section: string) => void;\n    scrollToSection: (sectionId: string) => void;\n    setIsOpen: (isOpen: boolean) => void;\n}\n\nconst NavItem: React.FC<NavItemProps> = ({\n    sectionId,\n    label,\n    activeSection,\n    setActiveSection,\n    scrollToSection,\n    setIsOpen,\n}) => {\n    return (\n        <li>\n            <div\n                className={cn(\"rounded p-1 cursor-pointer\", {\n                    \"bg-primary text-white duration-300 ease-in-out\": activeSection === sectionId,\n                })}\n                onClick={() => {\n                    setActiveSection(sectionId);\n                    scrollToSection(sectionId);\n                    setIsOpen(false);\n                }}\n            >\n                {label}\n            </div>\n        </li>\n    );\n};\n\nexport default NavItem;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAcA,MAAM,UAAkC,CAAC,EACrC,SAAS,EACT,KAAK,EACL,aAAa,EACb,gBAAgB,EAChB,eAAe,EACf,SAAS,EACZ;IACG,qBACI,8OAAC;kBACG,cAAA,8OAAC;YACG,WAAW,CAAA,GAAA,mIAAA,CAAA,UAAE,AAAD,EAAE,8BAA8B;gBACxC,kDAAkD,kBAAkB;YACxE;YACA,SAAS;gBACL,iBAAiB;gBACjB,gBAAgB;gBAChB,UAAU;YACd;sBAEC;;;;;;;;;;;AAIjB;uCAEe"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/parakhchoudhary/Desktop/parakh-portfolio/app/components/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport cn from \"classnames\";\nimport NavItem from \"./NavItem\"; \n\nconst Navbar = () => {\n    const [activeSection, setActiveSection] = React.useState(\"home\");\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        setActiveSection(\"home\");\n    }, []);\n\n    const scrollToSection = React.useCallback((sectionId: string) => {\n        const section = document.getElementById(sectionId);\n        if (section) {\n            section.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, []);\n\n    const navItems = [\n        { id: \"home\", label: \"Home\" },\n        { id: \"skills\", label: \"Skills\" },\n        { id: \"projects\", label: \"Projects\" },\n        { id: \"testimonials\", label: \"Testimonials\" },\n        { id: \"experience\", label: \"Experience\" },\n        { id: \"contact\", label: \"Contact\" },\n    ];\n\n    return (\n        <div className=\"fixed top-12 right-6 mx-auto flex flex-col gap-2.5 items-end z-50 md:right-auto md:left-1/2 md:-translate-x-1/2\">\n            <button\n                className=\"bg-background card-shadow p-3 md:hidden rounded\"\n                onClick={() => setIsOpen((prevVal) => !prevVal)}\n            >\n                <img className=\"dark:hidden block\" src=\"/menu_icon_light.svg\" alt=\"menu_icon\" />\n                <img className=\"hidden dark:block\" src=\"/menu_icon_dark.svg\" alt=\"menu_icon\" />\n            </button>\n            <nav\n                className={cn(\n                    \"bg-background card-shadow p-3 rounded md:block duration-300 ease-in-out\",\n                    { \"opacity-100\": isOpen, \"opacity-0 md:opacity-100\": !isOpen }\n                )}\n            >\n                <ul className=\"flex flex-col items-center gap-4 text-lg font-normal md:flex-row\">\n                    {navItems.map((item) => (\n                        <NavItem\n                            key={item.id}\n                            sectionId={item.id}\n                            label={item.label}\n                            activeSection={activeSection}\n                            setActiveSection={setActiveSection}\n                            scrollToSection={scrollToSection}\n                            setIsOpen={setIsOpen}\n                        />\n                    ))}\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default Navbar;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,SAAS;IACX,MAAM,CAAC,eAAe,iBAAiB,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACzD,MAAM,CAAC,QAAQ,UAAU,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAE3C,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACZ,iBAAiB;IACrB,GAAG,EAAE;IAEL,MAAM,kBAAkB,qMAAA,CAAA,UAAK,CAAC,WAAW,CAAC,CAAC;QACvC,MAAM,UAAU,SAAS,cAAc,CAAC;QACxC,IAAI,SAAS;YACT,QAAQ,cAAc,CAAC;gBAAE,UAAU;YAAS;QAChD;IACJ,GAAG,EAAE;IAEL,MAAM,WAAW;QACb;YAAE,IAAI;YAAQ,OAAO;QAAO;QAC5B;YAAE,IAAI;YAAU,OAAO;QAAS;QAChC;YAAE,IAAI;YAAY,OAAO;QAAW;QACpC;YAAE,IAAI;YAAgB,OAAO;QAAe;QAC5C;YAAE,IAAI;YAAc,OAAO;QAAa;QACxC;YAAE,IAAI;YAAW,OAAO;QAAU;KACrC;IAED,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBACG,WAAU;gBACV,SAAS,IAAM,UAAU,CAAC,UAAY,CAAC;;kCAEvC,8OAAC;wBAAI,WAAU;wBAAoB,KAAI;wBAAuB,KAAI;;;;;;kCAClE,8OAAC;wBAAI,WAAU;wBAAoB,KAAI;wBAAsB,KAAI;;;;;;;;;;;;0BAErE,8OAAC;gBACG,WAAW,CAAA,GAAA,mIAAA,CAAA,UAAE,AAAD,EACR,2EACA;oBAAE,eAAe;oBAAQ,4BAA4B,CAAC;gBAAO;0BAGjE,cAAA,8OAAC;oBAAG,WAAU;8BACT,SAAS,GAAG,CAAC,CAAC,qBACX,8OAAC,6HAAA,CAAA,UAAO;4BAEJ,WAAW,KAAK,EAAE;4BAClB,OAAO,KAAK,KAAK;4BACjB,eAAe;4BACf,kBAAkB;4BAClB,iBAAiB;4BACjB,WAAW;2BANN,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAaxC;uCAEe"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/parakhchoudhary/Desktop/parakh-portfolio/app/components/Sections.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\n\nconst Sections = () => {\n  return (\n    <main className=\"flex flex-col gap-[142px] w-full md:max-w-screen-lg pt-[236px] md:pt-\">Sections</main>\n  )\n}\n\nexport default Sections"],"names":[],"mappings":";;;;AAAA;;AAIA,MAAM,WAAW;IACf,qBACE,8OAAC;QAAK,WAAU;kBAAwE;;;;;;AAE5F;uCAEe"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}